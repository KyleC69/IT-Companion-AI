// Project Name: LightweightAI.Core
// File Name: SourceRegistry.cs
// Author: AutoGenerated
// License: All Rights Reserved. No use without consent.
// Do not remove file headers

using LightweightAI.Core.Abstractions;

namespace LightweightAI.Core.Engine;

/// <summary>
/// Registry used to collect and enumerate configured source loaders. Provides a single
/// indirection layer so pipeline construction can remain config driven.
/// </summary>
public interface ISourceRegistry
{
    void Register(string sourceKey, ISourceLoader loader, IReadOnlyDictionary<string,string>? parameters = null);
    IEnumerable<SourceExecutionPlan> Plans { get; }
}

internal sealed class SourceRegistry : ISourceRegistry
{
    private readonly List<SourceExecutionPlan> _plans = new();

    public void Register(string sourceKey, ISourceLoader loader, IReadOnlyDictionary<string,string>? parameters = null)
    {
        ArgumentException.ThrowIfNullOrWhiteSpace(sourceKey);
        _plans.Add(new SourceExecutionPlan(sourceKey, loader, parameters));
    }

    public IEnumerable<SourceExecutionPlan> Plans => _plans;
}