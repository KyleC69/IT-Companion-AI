// Project Name: LightweightAI.Core
// File Name: SmtpAlertSink.cs
// Author: AutoGenerated
// License: All Rights Reserved. No use without consent.
// Do not remove file headers

using System.Net.Mail;
using System.Net;
using LightweightAI.Core.Abstractions;

namespace LightweightAI.Core.Engine.Alerts;

/// <summary>
/// Minimal SMTP alert sink (plaintext). For production usage add batching, TLS enforcement and templates.
/// </summary>
public sealed class SmtpAlertSink : IAlertSink
{
    public string Name => "smtp";
    private readonly string _host;
    private readonly int _port;
    private readonly string? _user;
    private readonly string? _pass;
    private readonly string _from;
    private readonly string _to;

    public SmtpAlertSink(string host, int port, string from, string to, string? user = null, string? pass = null)
    {
        _host = host; _port = port; _from = from; _to = to; _user = user; _pass = pass;
    }

    public async Task SendAsync(ProvenancedDecision decision, CancellationToken ct = default)
    {
        using var client = new SmtpClient(_host, _port);
        if (!string.IsNullOrEmpty(_user)) client.Credentials = new NetworkCredential(_user, _pass);
        var body = $"Time: {decision.TimestampUtc:O}\nCorrelation: {decision.CorrelationId}\nRisk: {decision.Risk:F2}\nSeverity: {decision.Severity}\nSummary: {decision.Summary}";
        using var msg = new MailMessage(_from, _to, $"[AI Alert] {decision.Summary}", body);
        await client.SendMailAsync(msg, ct);
    }
}